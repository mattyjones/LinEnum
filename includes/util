#!/bin/bash

red="0;31m"
green="0;32m"
orange="0;33m"
blue="0;34m"
purple="0;35m"
cyan="0;36m"
white="1;37m"
yellow="1;33m"
default="0m"

# help function
usage() {
  echo -e "\n\e[$red#########################################################\e[$default"
  echo -e "\e[$red#\e[00m" "\e[$orange Local Linux Enumeration & Privilege Escalation Script\e[$default" "\e[$red#\e[$default"
  echo -e "\e[$red#########################################################\e[$default"
  echo -e "\e[$orange# www.rebootuser.com | @rebootuser \e[$default"
  echo -e "\e[$orange# $version\e[$default\n"
  echo -e "\e[$orange# Example: ./LinEnum.sh -k keyword -r report -e /tmp/ -t \e[$default\n"

  echo "OPTIONS:"
  echo "-k	Enter keyword"
  echo "-e	Enter export location"
  echo "-s 	Supply user password for sudo checks (INSECURE)"
  echo "-t	Include thorough (lengthy) tests"
  echo "-r	Enter report name"
  echo "-h	Displays this help text"
  echo -e "\n"
  echo "Running with no options = limited scans/no output file"

  echo -e "\e[$red#########################################################\e[$default"
}

header() {
  echo -e "\n\e[$red#########################################################\e[$default"
  echo -e "\e[$red#\e[00m" "\e[00;33mLocal Linux Enumeration & Privilege Escalation Script\e[$default" "\e[$red#\e[$default"
  echo -e "\e[$red#########################################################\e[$default"
  echo -e "\e[$orange# www.rebootuser.com\e[$default"
  echo -e "\e[$orange# $version\e[$default\n"

}

debug_info() {
  echo "[-] Debug Info"

  if [ "$keyword" ]; then
    echo "[+] Searching for the keyword $keyword in conf, php, ini and log files"
  fi

  if [ "$report" ]; then
    echo "[+] Report name = $report"
  fi

  if [ "$export" ]; then
    echo "[+] Export location = $export"
  fi

  if [ "$thorough" ]; then
    echo "[+] Thorough tests = Enabled"
  else
    echo -e "\e[$purple [+] Thorough tests = Disabled\e[$default"
  fi

  sleep 2

  if [ "$export" ]; then
    mkdir "$export" 2>/dev/null
    local format
    format="$export/LinEnum-export-$(date +"%d-%m-%y")"
    mkdir "$format" 2>/dev/null
  fi

  if [ "$sudopass" ]; then
    local user_password
    echo -e "\e[$purple [+] Please enter password - INSECURE - really only for CTF use!\e[$default"
    read -sr user_password
    echo
  fi

  who=$(whoami) 2>/dev/null
  echo -e "\n"

  echo -e "\e[$orange Scan started at:"
  date
  echo -e "\e[00m\n"
}

# useful binaries (thanks to https://gtfobins.github.io/)
binarylist='aria2c\|arp\|ash\|awk\|base64\|bash\|busybox\|cat\|chmod\|chown\|cp\|csh\|curl\|cut\|dash\|date\|dd\|diff\|dmsetup\|docker\|ed\|emacs\|env\|expand\|expect\|file\|find\|flock\|fmt\|fold\|ftp\|gawk\|gdb\|gimp\|git\|grep\|head\|ht\|iftop\|ionice\|ip$\|irb\|jjs\|jq\|jrunscript\|ksh\|ld.so\|ldconfig\|less\|logsave\|lua\|make\|man\|mawk\|more\|mv\|mysql\|nano\|nawk\|nc\|netcat\|nice\|nl\|nmap\|node\|od\|openssl\|perl\|pg\|php\|pic\|pico\|python\|readelf\|rlwrap\|rpm\|rpmquery\|rsync\|ruby\|run-parts\|rvim\|scp\|script\|sed\|setarch\|sftp\|sh\|shuf\|socat\|sort\|sqlite3\|ssh$\|start-stop-daemon\|stdbuf\|strace\|systemctl\|tail\|tar\|taskset\|tclsh\|tee\|telnet\|tftp\|time\|timeout\|ul\|unexpand\|uniq\|unshare\|vi\|vim\|watch\|wget\|wish\|xargs\|xxd\|zip\|zsh'

footer() {
  echo -e "\e[00;33m### SCAN COMPLETE ####################################\e[00m"
}
